name: Kernel Sync & Trigger Build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'  # 每天早上 6 点检测最新内核

env:
  KERNEL_REPO: https://github.com/ophub/flippy-openwrt-actions
  KERNEL_TAG: kernel_stable
  TZ: Asia/Shanghai

jobs:
  check_kernel:
    runs-on: ubuntu-latest
    name: Check latest kernel and trigger build

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: Set up timezone
        run: sudo timedatectl set-timezone "$TZ"

      - name: Get latest 6.12.x kernel from flippy
        id: kernel
        run: |
          echo "🔍 Fetching latest 6.12.x kernel info ..."
          api="https://api.github.com/repos/ophub/flippy-openwrt-actions/releases/tags/${KERNEL_TAG}"
          kernel_info=$(curl -s "$api")

          # 列出所有 tar.gz 文件名
          echo "$kernel_info" | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+\.tar\.gz' | sort -V > kernel_list.txt
          echo "🧩 Found these kernel files:"
          cat kernel_list.txt || true

          latest_asset=$(grep -E '^6\.12\.' kernel_list.txt | sort -V | tail -n1)
          if [ -z "$latest_asset" ]; then
            echo "❌ No 6.12.x kernel found under tag ${KERNEL_TAG}!"
            exit 1
          fi

          kernel_version=$(echo "$latest_asset" | sed 's/.tar.gz//')
          echo "✅ Latest kernel found: $kernel_version"
          echo "kernel_version=$kernel_version" >> $GITHUB_OUTPUT

      - name: Save kernel version
        run: |
          echo "${{ steps.kernel.outputs.kernel_version }}" > latest-kernel.txt
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add latest-kernel.txt
          git commit -m "Update kernel to ${{ steps.kernel.outputs.kernel_version }}" || echo "No changes"
          git push

      - name: Trigger build workflow (gh api)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KERNEL_VERSION: ${{ steps.kernel.outputs.kernel_version }}
        run: |
          echo "🚀 Triggering build-openwrt-huge.yml with kernel=${KERNEL_VERSION}"
          gh api \
            repos/${{ github.repository }}/actions/workflows/build-openwrt-huge.yml/dispatches \
            -f ref=main \
            -f inputs[kernel_version]=$KERNEL_VERSION
